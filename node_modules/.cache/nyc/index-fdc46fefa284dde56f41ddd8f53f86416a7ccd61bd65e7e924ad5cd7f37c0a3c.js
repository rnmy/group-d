function cov_gr1dcnn8m(){var path="/Users/tansuyin/Desktop/group-d/routes/index.js";var hash="0fef10581128390c206237a12482a4bb6d516483";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/tansuyin/Desktop/group-d/routes/index.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:15},end:{line:2,column:31}},"2":{start:{line:3,column:17},end:{line:3,column:36}},"3":{start:{line:4,column:13},end:{line:4,column:38}},"4":{start:{line:5,column:15},end:{line:5,column:32}},"5":{start:{line:6,column:13},end:{line:6,column:28}},"6":{start:{line:7,column:15},end:{line:7,column:35}},"7":{start:{line:13,column:16},end:{line:19,column:2}},"8":{start:{line:17,column:6},end:{line:17,column:83}},"9":{start:{line:21,column:15},end:{line:29,column:17}},"10":{start:{line:27,column:6},end:{line:27,column:36}},"11":{start:{line:33,column:0},end:{line:35,column:3}},"12":{start:{line:34,column:4},end:{line:34,column:26}},"13":{start:{line:38,column:0},end:{line:43,column:5}},"14":{start:{line:39,column:4},end:{line:42,column:7}},"15":{start:{line:46,column:0},end:{line:86,column:3}},"16":{start:{line:47,column:2},end:{line:85,column:3}},"17":{start:{line:48,column:4},end:{line:83,column:7}},"18":{start:{line:49,column:6},end:{line:52,column:8}},"19":{start:{line:55,column:8},end:{line:73,column:9}},"20":{start:{line:56,column:10},end:{line:63,column:15}},"21":{start:{line:65,column:10},end:{line:72,column:15}},"22":{start:{line:74,column:8},end:{line:82,column:11}},"23":{start:{line:75,column:10},end:{line:81,column:13}},"24":{start:{line:76,column:12},end:{line:76,column:74}},"25":{start:{line:78,column:10},end:{line:81,column:12}},"26":{start:{line:79,column:12},end:{line:79,column:64}},"27":{start:{line:80,column:12},end:{line:80,column:36}},"28":{start:{line:177,column:0},end:{line:179,column:3}},"29":{start:{line:178,column:2},end:{line:178,column:29}},"30":{start:{line:182,column:0},end:{line:188,column:3}},"31":{start:{line:191,column:0},end:{line:195,column:3}},"32":{start:{line:192,column:2},end:{line:192,column:15}},"33":{start:{line:193,column:2},end:{line:193,column:50}},"34":{start:{line:194,column:2},end:{line:194,column:20}},"35":{start:{line:197,column:0},end:{line:197,column:23}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:15,column:12},end:{line:15,column:13}},loc:{start:{line:15,column:36},end:{line:18,column:3}},line:15},"1":{name:"(anonymous_1)",decl:{start:{line:26,column:14},end:{line:26,column:15}},loc:{start:{line:26,column:38},end:{line:28,column:3}},line:26},"2":{name:"(anonymous_2)",decl:{start:{line:33,column:16},end:{line:33,column:17}},loc:{start:{line:33,column:30},end:{line:35,column:1}},line:33},"3":{name:"(anonymous_3)",decl:{start:{line:38,column:24},end:{line:38,column:25}},loc:{start:{line:38,column:42},end:{line:43,column:3}},line:38},"4":{name:"(anonymous_4)",decl:{start:{line:46,column:24},end:{line:46,column:25}},loc:{start:{line:46,column:42},end:{line:86,column:1}},line:46},"5":{name:"(anonymous_5)",decl:{start:{line:47,column:19},end:{line:47,column:20}},loc:{start:{line:47,column:28},end:{line:84,column:5}},line:47},"6":{name:"(anonymous_6)",decl:{start:{line:74,column:50},end:{line:74,column:51}},loc:{start:{line:74,column:69},end:{line:82,column:9}},line:74},"7":{name:"(anonymous_7)",decl:{start:{line:78,column:51},end:{line:78,column:52}},loc:{start:{line:78,column:61},end:{line:81,column:11}},line:78},"8":{name:"(anonymous_8)",decl:{start:{line:177,column:21},end:{line:177,column:22}},loc:{start:{line:177,column:39},end:{line:179,column:1}},line:177},"9":{name:"(anonymous_9)",decl:{start:{line:187,column:6},end:{line:187,column:7}},loc:{start:{line:187,column:24},end:{line:188,column:1}},line:187},"10":{name:"(anonymous_10)",decl:{start:{line:191,column:22},end:{line:191,column:23}},loc:{start:{line:191,column:40},end:{line:195,column:1}},line:191}},branchMap:{"0":{loc:{start:{line:48,column:4},end:{line:83,column:7}},type:"if",locations:[{start:{line:48,column:4},end:{line:83,column:7}},{start:{line:48,column:4},end:{line:83,column:7}}],line:48},"1":{loc:{start:{line:55,column:8},end:{line:73,column:9}},type:"if",locations:[{start:{line:55,column:8},end:{line:73,column:9}},{start:{line:55,column:8},end:{line:73,column:9}}],line:55},"2":{loc:{start:{line:75,column:10},end:{line:81,column:13}},type:"if",locations:[{start:{line:75,column:10},end:{line:81,column:13}},{start:{line:75,column:10},end:{line:81,column:13}}],line:75}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0fef10581128390c206237a12482a4bb6d516483"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_gr1dcnn8m=function(){return actualCoverage;};}return actualCoverage;}cov_gr1dcnn8m();const express=(cov_gr1dcnn8m().s[0]++,require('express'));const router=(cov_gr1dcnn8m().s[1]++,express.Router());const passport=(cov_gr1dcnn8m().s[2]++,require("passport"));const User=(cov_gr1dcnn8m().s[3]++,require("../models/user"));const multer=(cov_gr1dcnn8m().s[4]++,require('multer'));const path=(cov_gr1dcnn8m().s[5]++,require('path'));const helper=(cov_gr1dcnn8m().s[6]++,require('../helper'));// const middleware = require('../middleware')
// const crypto = require('crypto')
// const sgMail = require('@sendgrid/mail')
// sgMail.setApiKey(process.env.SENDGRID_API_KEY);
const storage=(cov_gr1dcnn8m().s[7]++,multer.diskStorage({destination:'./public/uploads',filename:function(req,file,cb){cov_gr1dcnn8m().f[0]++;cov_gr1dcnn8m().s[8]++;// extname extracts .jpeg, .png etc
cb(null,file.fieldname+'-'+Date.now()+path.extname(file.originalname));}}));const upload=(cov_gr1dcnn8m().s[9]++,multer({storage:storage,limits:{fileSize:1000000},fileFilter:function(req,file,cb){cov_gr1dcnn8m().f[1]++;cov_gr1dcnn8m().s[10]++;helper.checkFileType(file,cb);}}).single('file'));// Landing page
cov_gr1dcnn8m().s[11]++;router.get("/",(req,res)=>{cov_gr1dcnn8m().f[2]++;cov_gr1dcnn8m().s[12]++;res.render("landing");});// show register form
cov_gr1dcnn8m().s[13]++;router.get("/register",function(req,res){cov_gr1dcnn8m().f[3]++;cov_gr1dcnn8m().s[14]++;res.render("./auth/register",{data:{},error:''});});// //handle sign up logic without email verification
cov_gr1dcnn8m().s[15]++;router.post("/register",function(req,res){cov_gr1dcnn8m().f[4]++;cov_gr1dcnn8m().s[16]++;upload(req,res,err=>{cov_gr1dcnn8m().f[5]++;cov_gr1dcnn8m().s[17]++;if(err){cov_gr1dcnn8m().b[0][0]++;cov_gr1dcnn8m().s[18]++;res.render("./auth/register",{data:req.body,error:"Please upload only images for your profile picture (e.g. .jpeg/.png files)"});}else{cov_gr1dcnn8m().b[0][1]++;let newUser;cov_gr1dcnn8m().s[19]++;if(req.file==undefined){cov_gr1dcnn8m().b[1][0]++;cov_gr1dcnn8m().s[20]++;newUser=new User({name:req.sanitize(req.body.name),email:req.sanitize(req.body.email),username:req.sanitize(req.body.username),organization:req.sanitize(req.body.organization),profilePic:''});}else{cov_gr1dcnn8m().b[1][1]++;cov_gr1dcnn8m().s[21]++;newUser=new User({name:req.sanitize(req.body.name),email:req.sanitize(req.body.email),username:req.sanitize(req.body.username),organization:req.sanitize(req.body.organization),profilePic:req.file.filename});}cov_gr1dcnn8m().s[22]++;User.register(newUser,req.body.password,function(err,user){cov_gr1dcnn8m().f[6]++;cov_gr1dcnn8m().s[23]++;if(err){cov_gr1dcnn8m().b[2][0]++;cov_gr1dcnn8m().s[24]++;res.render("./auth/register",{error:err.message,data:''});}else{cov_gr1dcnn8m().b[2][1]++;cov_gr1dcnn8m().s[25]++;passport.authenticate("local")(req,res,function(){cov_gr1dcnn8m().f[7]++;cov_gr1dcnn8m().s[26]++;req.flash("success","Successfully created account");cov_gr1dcnn8m().s[27]++;res.redirect("/events");});}});}});});//handle sign up logic WITH EMAIL VERIFICATION
// router.post("/register", async function(req, res){
//   upload(req, res, (err) => {
//     if (err) {
//       res.render("./auth/register", {
//         data: req.body,
//         error: "Please upload only images for your profile picture (e.g. .jpeg/.png files)"
//       })
//     } else {
//         let newUser
//         if (req.file == undefined) {
//           newUser = new User(
//             {
//               name: req.sanitize(req.body.name),
//               email: req.sanitize(req.body.email),
//               emailToken: crypto.randomBytes(64).toString('hex'),
//               isVerified: false,
//               username: req.sanitize(req.body.username),
//               organization: req.sanitize(req.body.organization),
//               profilePic: ''
//             });
//         } else {
//           newUser = new User(
//             {
//               name: req.sanitize(req.body.name),
//               email:req.sanitize(req.body.email),
//               emailToken: crypto.randomBytes(64).toString('hex'),
//               isVerified: false,
//               username: req.sanitize(req.body.username),
//               organization: req.sanitize(req.body.organization),
//               profilePic: req.file.filename
//             });
//         }
//         User.register(newUser, req.body.password, async function(err, user){
//           if(err) {
//             req.flash("error", err.message)
//             console.log(err)
//             return res.redirect("/register");
//           } 
//           const msg = {
//             to: user.email,
//             from: 'team.groupdapp@gmail.com',
//             subject: "Verify your group'd account",
//             text: `Thank you for registering with group'd, ${user.name}! Click here to verify your account to start using group'd today: http://${req.headers.host}/verify-email?token=${user.emailToken}`,
//             html: `
//             <h1>Thank you for registering with group'd, ${user.name}!</h1>
//             <h3>To verify your account, click <a href="http://${req.headers.host}/verify-email?token=${user.emailToken}">here</a> and start using group'd today!`
//           }
//           try {
//             await sgMail.send(msg)
//             req.flash("success", "Thanks for registering! Please check your email to verify your account before logging in!")
//             res.redirect('/')
//           } catch(err) {
//             console.log(err)
//             req.flash("error", "Something went wrong...Try again")
//             res.redirect("/register")
//           }
//         });
//       }
//     }
//   )
// });
// // Email verification route 
// router.get('/verify-email', async (req, res, next) => {
//   try {
//     const user = await User.findOne({emailToken: req.query.token})
//     if (!user) {
//       req.flash("error", "Invalid token! Please contact us for assistance using our contact form!")
//       return res.redirect('/')
//     }
//     user.emailToken = null 
//     user.isVerified = true
//     await user.save()
//     await req.login(user, async (err) => {
//       if (err) return next(err)
//       const redirectUrl = req.session.redirectTo || '/events'
//       delete req.session.redirectTo
//       req.flash("success", `Welcome to group'd, ${user.username}!`)
//       res.redirect(redirectUrl)
//     })
//   } catch (err) {
//     console.log(err)
//     req.flash("error", "Something went wrong...Try again")
//     res.redirect("back")
//   }
// })
// show login form
cov_gr1dcnn8m().s[28]++;router.get("/login",function(req,res){cov_gr1dcnn8m().f[8]++;cov_gr1dcnn8m().s[29]++;res.render("./auth/login");});// handling login logic (add isVerified if email verification is working)
cov_gr1dcnn8m().s[30]++;router.post("/login",passport.authenticate("local",{successRedirect:"/events",failureRedirect:"/login",failureFlash:true}),function(req,res){cov_gr1dcnn8m().f[9]++;});// logout
cov_gr1dcnn8m().s[31]++;router.get("/logout",function(req,res){cov_gr1dcnn8m().f[10]++;cov_gr1dcnn8m().s[32]++;req.logout();cov_gr1dcnn8m().s[33]++;req.flash("success","You have been logged out");cov_gr1dcnn8m().s[34]++;res.redirect("/");});cov_gr1dcnn8m().s[35]++;module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,